DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example1.csv
INFO       in table.py            --> Initialization of table: "./data/table_example1.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example1.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 8) to (7, 8).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (0, 1); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Printing table: ./data/table_example1.csv
DEBUG      in test_table_table.py --> Result = ((0, 1), (1, 1))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example2.csv
INFO       in table.py            --> Initialization of table: "./data/table_example2.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example2.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (0, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Printing table: ./data/table_example2.csv
DEBUG      in test_table_table.py --> Result = ((0, 0), (2, 0))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example3.csv
INFO       in table.py            --> Initialization of table: "./data/table_example3.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example3.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (8, 11) to (8, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Printing table: ./data/table_example3.csv
DEBUG      in test_table_table.py --> Result = ((1, 0), (2, 0))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example4.csv
INFO       in table.py            --> Initialization of table: "./data/table_example4.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example4.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (3, 6) to (3, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Printing table: ./data/table_example4.csv
DEBUG      in test_table_table.py --> Result = ((0, 0), (0, 0))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example5.csv
INFO       in table.py            --> Initialization of table: "./data/table_example5.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example5.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (0, 0); Table Cell CC2 = (1, 0)
INFO       in table.py            --> Printing table: ./data/table_example5.csv
DEBUG      in test_table_table.py --> Result = ((0, 0), (1, 0))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example6.csv
INFO       in table.py            --> Initialization of table: "./data/table_example6.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example6.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (12, 4) to (12, 4).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (1, 0); Table Cell CC2 = (1, 0)
INFO       in table.py            --> Printing table: ./data/table_example6.csv
DEBUG      in test_table_table.py --> Result = ((1, 0), (1, 0))
DEBUG      in test_table_table.py --> Test CC1 & CC2, Table: ./data/table_example7.csv
INFO       in table.py            --> Initialization of table: "./data/table_example7.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example7.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [1, 11] deleted.
INFO       in table.py            --> Empty columns [13] deleted.
INFO       in table.py            --> Duplicate rows [3] removed.
INFO       in table.py            --> Duplicate columns [4, 12] removed.
INFO       in table.py            --> Table shape changed from (16, 14) to (13, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Printing table: ./data/table_example7.csv
DEBUG      in test_table_table.py --> Result = ((1, 0), (2, 0))
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example1.csv
INFO       in table.py            --> Initialization of table: "./data/table_example1.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example1.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 8) to (7, 8).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (2, 2)
INFO       in test_table_table.py --> Table Cell CC3 = (2, 2)
DEBUG      in test_table_table.py --> Result = (2, 2)
INFO       in table.py            --> Printing table: ./data/table_example1.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example2.csv
INFO       in table.py            --> Initialization of table: "./data/table_example2.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example2.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (3, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (3, 1)
DEBUG      in test_table_table.py --> Result = (3, 1)
INFO       in table.py            --> Printing table: ./data/table_example2.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example3.csv
INFO       in table.py            --> Initialization of table: "./data/table_example3.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example3.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (8, 11) to (8, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (3, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (3, 1)
DEBUG      in test_table_table.py --> Result = (3, 1)
INFO       in table.py            --> Printing table: ./data/table_example3.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example4.csv
INFO       in table.py            --> Initialization of table: "./data/table_example4.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example4.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (3, 6) to (3, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (1, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (1, 1)
DEBUG      in test_table_table.py --> Result = (1, 1)
INFO       in table.py            --> Printing table: ./data/table_example4.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example5.csv
INFO       in table.py            --> Initialization of table: "./data/table_example5.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example5.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (2, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (2, 1)
DEBUG      in test_table_table.py --> Result = (2, 1)
INFO       in table.py            --> Printing table: ./data/table_example5.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example6.csv
INFO       in table.py            --> Initialization of table: "./data/table_example6.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example6.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (12, 4) to (12, 4).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (2, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (2, 1)
DEBUG      in test_table_table.py --> Result = (2, 1)
INFO       in table.py            --> Printing table: ./data/table_example6.csv
DEBUG      in test_table_table.py --> Test CC3, Table: ./data/table_example7.csv
INFO       in table.py            --> Initialization of table: "./data/table_example7.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example7.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [1, 11] deleted.
INFO       in table.py            --> Empty columns [13] deleted.
INFO       in table.py            --> Duplicate rows [3] removed.
INFO       in table.py            --> Duplicate columns [4, 12] removed.
INFO       in table.py            --> Table shape changed from (16, 14) to (13, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC3 = (4, 1)
INFO       in test_table_table.py --> Table Cell CC3 = (4, 1)
DEBUG      in test_table_table.py --> Result = (4, 1)
INFO       in table.py            --> Printing table: ./data/table_example7.csv
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example1.csv
INFO       in table.py            --> Initialization of table: "./data/table_example1.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example1.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 8) to (7, 8).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (6, 7)
INFO       in table.py            --> Printing table: ./data/table_example1.csv
DEBUG      in test_table_table.py --> Result = (6, 7)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example2.csv
INFO       in table.py            --> Initialization of table: "./data/table_example2.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example2.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Printing table: ./data/table_example2.csv
DEBUG      in test_table_table.py --> Result = (3, 5)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example3.csv
INFO       in table.py            --> Initialization of table: "./data/table_example3.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example3.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (8, 11) to (8, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (7, 10)
INFO       in table.py            --> Printing table: ./data/table_example3.csv
DEBUG      in test_table_table.py --> Result = (7, 10)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example4.csv
INFO       in table.py            --> Initialization of table: "./data/table_example4.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example4.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (3, 6) to (3, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (2, 5)
INFO       in table.py            --> Printing table: ./data/table_example4.csv
DEBUG      in test_table_table.py --> Result = (2, 5)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example5.csv
INFO       in table.py            --> Initialization of table: "./data/table_example5.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example5.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Printing table: ./data/table_example5.csv
DEBUG      in test_table_table.py --> Result = (3, 5)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example6.csv
INFO       in table.py            --> Initialization of table: "./data/table_example6.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example6.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (12, 4) to (12, 4).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (11, 3)
INFO       in table.py            --> Printing table: ./data/table_example6.csv
DEBUG      in test_table_table.py --> Result = (11, 3)
DEBUG      in test_table_table.py --> Test CC4, Table: ./data/table_example7.csv
INFO       in table.py            --> Initialization of table: "./data/table_example7.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example7.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [1, 11] deleted.
INFO       in table.py            --> Empty columns [13] deleted.
INFO       in table.py            --> Duplicate rows [3] removed.
INFO       in table.py            --> Duplicate columns [4, 12] removed.
INFO       in table.py            --> Table shape changed from (16, 14) to (13, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in test_table_table.py --> Table Cell CC4 = (8, 10)
INFO       in table.py            --> Printing table: ./data/table_example7.csv
DEBUG      in test_table_table.py --> Result = (8, 10)
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example1.csv
INFO       in table.py            --> Initialization of table: "./data/table_example1.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example1.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 8) to (7, 8).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 7)
INFO       in table.py            --> Table Cell CC1 = (0, 1); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Table Cell CC3 = (2, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example1.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example10.csv
INFO       in table.py            --> Initialization of table: "./data/table_example10.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example10.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (5, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example10.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example11b.csv
INFO       in table.py            --> Initialization of table: "./data/table_example11b.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example11b.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 2
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (4, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example11b.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example12.csv
INFO       in table.py            --> Initialization of table: "./data/table_example12.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example12.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (6, 5) to (6, 5).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 2
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (5, 4)
INFO       in table.py            --> Table Cell CC1 = (0, 1); Table Cell CC2 = (0, 2)
INFO       in table.py            --> Table Cell CC3 = (1, 3)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example12.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example13.csv
INFO       in table.py            --> Initialization of table: "./data/table_example13.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example13.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (15, 6) to (15, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (14, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example13.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example2.csv
INFO       in table.py            --> Initialization of table: "./data/table_example2.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example2.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example2.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example3.csv
INFO       in table.py            --> Initialization of table: "./data/table_example3.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example3.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (8, 11) to (8, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (7, 10)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example3.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example4.csv
INFO       in table.py            --> Initialization of table: "./data/table_example4.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example4.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (3, 6) to (3, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (2, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example4.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example5.csv
INFO       in table.py            --> Initialization of table: "./data/table_example5.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example5.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (1, 0)
INFO       in table.py            --> Table Cell CC3 = (2, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example5.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example7.csv
INFO       in table.py            --> Initialization of table: "./data/table_example7.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example7.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [1, 11] deleted.
INFO       in table.py            --> Empty columns [13] deleted.
INFO       in table.py            --> Duplicate rows [3] removed.
INFO       in table.py            --> Duplicate columns [4, 12] removed.
INFO       in table.py            --> Table shape changed from (16, 14) to (13, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (8, 10)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (4, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = [(10, 0, ('a)',))]
INFO       in table.py            --> FNtext Cells = [(10, 1)]
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = [(9, 0, ('1', 'This is a description')), (12, 0, ('*', 'Source'))]
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(a\))"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(^.+\s)(1)(\s.+)?$"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^(1)$"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(\*)"
INFO       in table.py            --> FNref Cells = [(3, 0, ('a)',)), (4, 0, ('a)',)), (8, 0, ('OECD/DAC ', '1', None)), (2, 4, ('*',)), (2, 5, ('*',)), (2, 9, ('*',)), (2, 10, ('*',))]
INFO       in table.py            --> Repr. table: ./data/table_example7.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example8.csv
INFO       in table.py            --> Initialization of table: "./data/table_example8.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example8.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (4, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example8.csv
DEBUG      in test_table_table.py --> Test Categorization Table: ./data/table_example9.csv
INFO       in table.py            --> Initialization of table: "./data/table_example9.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example9.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 3) to (7, 3).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 3)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Table Cell CC3 = (2, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example9.csv
DEBUG      in test_table_table.py --> Test duplicate label prefixing: ./data/table_example10.csv
INFO       in table.py            --> Initialization of table: "./data/table_example10.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example10.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (5, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
DEBUG      in test_table_table.py --> Test duplicate label prefixing: ./data/table_example11.csv
INFO       in table.py            --> Initialization of table: "./data/table_example11.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example11.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 2
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (4, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
DEBUG      in test_table_table.py --> Test duplicate label prefixing: ./data/table_example12.csv
INFO       in table.py            --> Initialization of table: "./data/table_example12.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example12.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (6, 5) to (6, 5).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 2
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (5, 4)
INFO       in table.py            --> Table Cell CC1 = (0, 1); Table Cell CC2 = (0, 2)
INFO       in table.py            --> Table Cell CC3 = (1, 3)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
DEBUG      in test_table_table.py --> Test duplicate label prefixing: ./data/table_example8.csv
INFO       in table.py            --> Initialization of table: "./data/table_example8.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example8.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (4, 5)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
DEBUG      in test_table_table.py --> Test duplicate label prefixing: ./data/table_example9.csv
INFO       in table.py            --> Initialization of table: "./data/table_example9.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example9.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 3) to (7, 3).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 3)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Table Cell CC3 = (2, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
DEBUG      in test_table_table.py --> Test single column/row table: ./data/te_01.csv
INFO       in table.py            --> Initialization of table: "./data/te_01.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/te_01.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (2, 7) to (2, 7).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (1, 6)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_01.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 2) to (7, 2).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 1)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_01.csv
DEBUG      in test_table_table.py --> Test single column/row table: ./data/te_02.csv
INFO       in table.py            --> Initialization of table: "./data/te_02.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/te_02.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 2) to (7, 2).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 1)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_02.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (2, 7) to (2, 7).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (1, 6)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_02.csv
DEBUG      in test_table_table.py --> Test single column/row table: ./data/te_03.csv
INFO       in table.py            --> Initialization of table: "./data/te_03.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/te_03.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 7) to (4, 7).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (3, 6)
INFO       in table.py            --> Table Cell CC1 = (1, 1); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Table Cell CC3 = (2, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_03.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 4) to (7, 4).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 3)
INFO       in table.py            --> Table Cell CC1 = (0, 1); Table Cell CC2 = (0, 1)
INFO       in table.py            --> Table Cell CC3 = (1, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/te_03.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example1.csv
INFO       in table.py            --> Initialization of table: "./data/table_example1.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example1.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (7, 8) to (7, 8).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (6, 7)
INFO       in table.py            --> Table Cell CC1 = (0, 1); Table Cell CC2 = (1, 1)
INFO       in table.py            --> Table Cell CC3 = (2, 2)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example1.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example2.csv
INFO       in table.py            --> Initialization of table: "./data/table_example2.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example2.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (5, 6) to (5, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example2.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example3.csv
INFO       in table.py            --> Initialization of table: "./data/table_example3.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example3.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (8, 11) to (8, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (7, 10)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (3, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example3.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example4.csv
INFO       in table.py            --> Initialization of table: "./data/table_example4.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example4.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (3, 6) to (3, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (2, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (0, 0)
INFO       in table.py            --> Table Cell CC3 = (1, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example4.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example5.csv
INFO       in table.py            --> Initialization of table: "./data/table_example5.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example5.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (4, 6) to (4, 6).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Column header prefixing, row_index= 1
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (3, 5)
INFO       in table.py            --> Table Cell CC1 = (0, 0); Table Cell CC2 = (1, 0)
INFO       in table.py            --> Table Cell CC3 = (2, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example5.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example6.csv
INFO       in table.py            --> Initialization of table: "./data/table_example6.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example6.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [] deleted.
INFO       in table.py            --> Empty columns [] deleted.
INFO       in table.py            --> Duplicate rows [] removed.
INFO       in table.py            --> Duplicate columns [] removed.
INFO       in table.py            --> Table shape changed from (12, 4) to (12, 4).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (11, 3)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (1, 0)
INFO       in table.py            --> Table Cell CC3 = (2, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = []
INFO       in table.py            --> FNtext Cells = []
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = []
INFO       in table.py            --> FNref Cells = []
INFO       in table.py            --> Repr. table: ./data/table_example6.csv
DEBUG      in test_table_table.py --> Test complete table labelling: ./data/table_example7.csv
INFO       in table.py            --> Initialization of table: "./data/table_example7.csv"
INFO       in table.py            --> Configuration parameters are: {'use_title_row': True, 'use_max_data_area': False, 'use_notes_in_first_col': True, 'use_prefixing': True, 'use_footnotes': True}
INFO       in from_any.py         --> CSV File: ./data/table_example7.csv
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Empty rows [1, 11] deleted.
INFO       in table.py            --> Empty columns [13] deleted.
INFO       in table.py            --> Duplicate rows [3] removed.
INFO       in table.py            --> Duplicate columns [4, 12] removed.
INFO       in table.py            --> Table shape changed from (16, 14) to (13, 11).
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Prefixing. Attempt to run main MIPS algorithm.
INFO       in table.py            --> Row header prefixing, column_index= 0
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([\s\-\–\"]+)?$"
INFO       in table.py            --> Table Cell CC4 = (8, 10)
INFO       in table.py            --> Table Cell CC1 = (1, 0); Table Cell CC2 = (2, 0)
INFO       in table.py            --> Table Cell CC3 = (4, 1)
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)$"
INFO       in table.py            --> FNPrefix Cells = [(10, 0, ('a)',))]
INFO       in table.py            --> FNtext Cells = [(10, 1)]
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^([*#\.o†\da-z][\.\)]?)\s([\w\[\]\s]+)"
INFO       in table.py            --> FNPrefix&FNtext Cells = [(9, 0, ('1', 'This is a description')), (12, 0, ('*', 'Source'))]
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(a\))"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(^.+\s)(1)(\s.+)?$"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "^(1)$"
INFO       in parse.py            --> Initialization of CellParser with regex pattern: "(\*)"
INFO       in table.py            --> FNref Cells = [(3, 0, ('a)',)), (4, 0, ('a)',)), (8, 0, ('OECD/DAC ', '1', None)), (2, 4, ('*',)), (2, 5, ('*',)), (2, 9, ('*',)), (2, 10, ('*',))]
INFO       in table.py            --> Repr. table: ./data/table_example7.csv
